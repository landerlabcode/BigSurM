(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     44526,        963]
NotebookOptionsPosition[     41820,        908]
NotebookOutlinePosition[     42212,        924]
CellTagsIndexPosition[     42169,        921]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Subclustering with BigSur", "Chapter",
 CellChangeTimes->{{3.906417467745303*^9, 
  3.9064174739743757`*^9}},ExpressionUUID->"9794167f-21eb-475d-b132-\
4b57a02f97e2"],

Cell[CellGroupData[{

Cell["Feature Selection ", "Section",
 CellChangeTimes->{{3.906421514801627*^9, 
  3.906421520633245*^9}},ExpressionUUID->"c430fcf9-2419-43d6-98a1-\
9b093af54ca1"],

Cell[CellGroupData[{

Cell["Features using modified corrected Fano factors", "Subsubsection",
 CellChangeTimes->{{3.906460653363405*^9, 3.906460658700001*^9}, {
  3.906461332629282*^9, 
  3.906461347711194*^9}},ExpressionUUID->"56148ecc-37b5-4f88-81c2-\
bc264f3c40a2"],

Cell["\<\
BigSur automatically calculates the modified corrected Fano factors for all \
genes in the matpac that is used as input.  The Fano factors are saved as a \
list in a file whose name ends with \
\[OpenCurlyDoubleQuote]modified_corrected_Fano factors.mx\
\[CloseCurlyDoubleQuote]; the pvalues are saved as a list in a file whose \
name ends with \[OpenCurlyDoubleQuote]fanopvalues.mx\[CloseCurlyDoubleQuote]. \
 Note that the values stored are in the form of -log10(pvalue).  The ordering \
of the list matches the ordering of gene names in the second component of the \
matpac.  

Determination of which pvalues are statistically significant is typically \
done using the Benjamini Hochberg algorithm, code for which is part of the \
BigSur package.  Note the log-transformed pvalues need to be restored to \
fractional values (range 0 to 1)  before application of the algorithm.  

After identifying a threshold pvalue for feature selection, the number of \
features may be further reduced by setting a threshold for the modified \
corrected Fano factor, typically a value in the range of 1.5 to 2.0, or \
greater.  Choice of a larger value implies that one is looking to cluster \
based on larger gene expression differences, as might be appropriate for \
distinct cell types; choice of smaller number would be more appropriate for \
distinguishing among related cell states.   \
\>", "Text",
 CellChangeTimes->{{3.906460662128029*^9, 3.906460718790093*^9}, {
  3.906460828573929*^9, 
  3.906461314754241*^9}},ExpressionUUID->"eee9da1c-6c70-47fb-be2f-\
b21649340eac"]
}, Open  ]],

Cell[CellGroupData[{

Cell["MostStronglyConnected", "Subsubsection",
 CellChangeTimes->{{3.906417970169873*^9, 
  3.906417986724946*^9}},ExpressionUUID->"6f0a5443-c389-4f07-b583-\
e42ddc9f1609"],

Cell["\<\
Feature selection using modified corrected fano factors treats each gene as \
an independent feature, giving each gene equal weight in driving clustering.  \
When gene expression is highly correlated, however, this may place undue \
emphasis on the contributions of certain genes.  For example, if a population \
consists of cell types, some of which are proliferative and some of which are \
not, features associated with proliferation may dominate clustering if there \
a very large number of them (as is often the case), potentially overwhelming \
the contributions of smaller groups of genes associated with functions of \
greater interest.  

One way to deal with this is to use BigSur to identify correlated gene \
communities first, and then choose to use a fixed number of genes from a \
particular set of communities as features.  Choosing communities that are \
anti-correlated with each other can be particularly helpful, as they often \
define important cell type differences.  Starting from well chosen \
communities, one can often achieve very good clustering using only 100 genes \
or so as features.  

To decide which genes from a community to use as features, it may be \
advantageous to select those that are involved in the strongest positive \
correlations.  This code produces a fixed number of the most strongly \
connected genes in any community or gene list.  

This starts with a gno and a list of genes.  It finds the \
\[OpenCurlyDoubleQuote]k\[CloseCurlyDoubleQuote] most strongly connected \
genes in that list, by ordering the equivalent PCCs for all interconnections \
(looking at positive correlations only) from highest to lowest, then takes \
whatever number of strongest interconnections produces a gene list of length \
k.  If no list of positively connected genes is at least length k it just \
returns the longest list it can find.  
\
\>", "Text",
 CellChangeTimes->{{3.90641914691648*^9, 3.906419367828496*^9}, {
  3.906421545477024*^9, 3.9064215831659327`*^9}, {3.906461001171946*^9, 
  3.9064610029787607`*^9}, {3.906461319557067*^9, 3.9064613304121447`*^9}, {
  3.9064613653681707`*^9, 3.906461564716775*^9}, {3.906461945316332*^9, 
  3.906461958316596*^9}, {3.906462059637439*^9, 
  3.90646231380274*^9}},ExpressionUUID->"8f015e31-2461-4101-9476-\
6a2786fc23c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MostStronglyConnected", "[", 
   RowBox[{"gno_", ",", " ", "genelist_", ",", " ", "k_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "gno2", ",", "keyrules", ",", "arrayrules", ",", "  ", "i", ",", " ", 
      "genes"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gno2", "=", 
      RowBox[{"GeneSubsetGNO", "[", 
       RowBox[{
        RowBox[{"TruncateGNO", "[", 
         RowBox[{"gno", ",", " ", "0", ",", " ", 
          RowBox[{"\"\<Positive Only\>\"", "->", " ", "True"}]}], "]"}], ",", 
        RowBox[{"Flatten", "[", "genelist", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"keyrules", "=", 
      RowBox[{"Thread", "[", " ", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", 
          RowBox[{"gno2", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "->", " ", 
        RowBox[{"gno2", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"arrayrules", "=", 
      RowBox[{"ReverseSortBy", "[", 
       RowBox[{
        RowBox[{"ArrayRules", "[", 
         RowBox[{"gno2", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], ",", " ", "Last"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", " ", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "arrayrules", "]"}]}], ",", " ", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"genes", "=", 
         RowBox[{"Union", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Keys", "[", 
             RowBox[{"Take", "[", 
              RowBox[{"arrayrules", ",", "i"}], "]"}], "]"}], "/.", 
            "keyrules"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "genes", "]"}], ">=", "k"}], ",", " ", 
          RowBox[{"Break", "[", "]"}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "genes"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.906417988810327*^9, 3.906418170845447*^9}, {
   3.906418202646605*^9, 3.906418239631173*^9}, {3.906418283151943*^9, 
   3.9064183772443533`*^9}, {3.906418552303556*^9, 3.906418596243383*^9}, {
   3.906418659025498*^9, 3.906418782647134*^9}, {3.906419010079523*^9, 
   3.906419034718335*^9}, 3.906419114494245*^9},
 Background->RGBColor[1, 1, 0],
 CellLabel->"In[1]:=",ExpressionUUID->"c83f71a0-d6ab-401d-9be9-c44efc88e8a3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clustering", "Section",
 CellChangeTimes->{{3.9064215231383877`*^9, 
  3.906421525927216*^9}},ExpressionUUID->"bf78f765-73ef-4881-928e-\
ae6b729c539c"],

Cell[CellGroupData[{

Cell["JaccardSimilarity", "Subsubsection",
 CellChangeTimes->{{3.879110186227014*^9, 3.8791101905542*^9}, {
  3.8791246648733*^9, 
  3.879124670528755*^9}},ExpressionUUID->"d39926ec-3f63-415b-ac5b-\
2c5376f35963"],

Cell["\<\
it is OK to set 0 to 1 in the Union List in the denominator because any \
position where the union has Length zero the intersection will have Length \
zero, so zero/one still equals zero\
\>", "Text",
 CellChangeTimes->{{3.879125051223259*^9, 3.879125066076701*^9}, 
   3.8796008065175543`*^9},ExpressionUUID->"9808ce1b-ac4d-468f-bfe3-\
df365855198e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"JaccardSimilarity", "=", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "_Integer", ",", " ", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", ",", "_Integer", ",", " ", "1"}], "}"}]}], "}"}], ",", 
    FractionBox[
     RowBox[{"Length", "[", 
      RowBox[{"Intersection", "[", 
       RowBox[{"a", ",", "b"}], "]"}], "]"}], 
     RowBox[{"Max", "[", 
      RowBox[{"1", ",", 
       RowBox[{"Length", "[", 
        RowBox[{"Union", "[", 
         RowBox[{"a", ",", "b"}], "]"}], "]"}]}], "]"}]], ",", " ", 
    RowBox[{"RuntimeAttributes", "->", 
     RowBox[{"{", "Listable", "}"}]}], ",", " ", 
    RowBox[{"Parallelization", "->", "True"}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.879110175677772*^9, 3.8791102878052683`*^9}, {
  3.879124679478128*^9, 3.879124686731086*^9}, {3.879124887188343*^9, 
  3.879124891416966*^9}},
 Background->RGBColor[1, 1, 0],
 CellLabel->
  "In[178]:=",ExpressionUUID->"1b0d7b7d-87ea-48af-a6f0-01eedbbd9de4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}]}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Integer", ",", "1"}], "}"}]}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"a", ",", "b"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   FractionBox[
                    RowBox[{"Length", "[", 
                    RowBox[{"a", "\[Intersection]", "b"}], "]"}], 
                    RowBox[{"Max", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"a", "\[Union]", "b"}], "]"}]}], "]"}]], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 13.1, 5852}, {{
     Blank[Integer], 1}, {
     Blank[Integer], 1}}, {{2, 1, 0}, {2, 1, 1}, {3, 0, 
   0}}, {{1, {2, 0, 1}}}, {0, 4, 2, 0, 
   3}, {{42, "Intersection", 2, 1, 0, 2, 1, 1, 2, 1, 2}, {33, 2, 0}, {
    42, "Union", 2, 1, 0, 2, 1, 1, 2, 1, 2}, {33, 2, 2}, {
    42, "MaxI", 2, 0, 1, 2, 0, 2, 2, 0, 3}, {10, 3, 0}, {40, 60, 3, 0, 0, 3, 
    0, 1}, {10, 0, 0}, {16, 0, 1, 0}, {1}}, 
   Function[{$CellContext`a, $CellContext`b}, Length[
      Intersection[$CellContext`a, $CellContext`b]]/Max[1, 
     Length[
      Union[$CellContext`a, $CellContext`b]]], Listable], Evaluate],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.879122761523899*^9, 3.879124693258326*^9, 
  3.879124899030699*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"e2a09cc1-7ff3-46fd-9cfc-89b4a9bf4e41"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SNNGraph2", "Subsubsection",
 CellChangeTimes->{{3.874439418206102*^9, 3.87443942385214*^9}, {
   3.9064196332369967`*^9, 3.906419636627277*^9}, 
   3.9064203315927153`*^9},ExpressionUUID->"a836ff8b-c976-4b33-ae1d-\
9ddb0b98cf47"],

Cell[TextData[{
 "SNNGraph2 is a function which was created to mimic the functionality of the \
FindNeighbors function in Seurat \
(https://satijalab.org/seurat/reference/findneighbors ) in a Mathematica \
environment. This function will determine both which cells belong to the same \
cluster and the number of total clusters in the dataset through the \
construction of a K Nearest Neighbor graph and calculation of the Shared \
Nearest Neighbors from the first ",
 StyleBox["n",
  FontSlant->"Italic"],
 " principal components. This acts as a modified KNN approach where the edge \
weights are pruned based on each node\[CloseCurlyQuote]s (cell\
\[CloseCurlyQuote]s) Jaccard similarity index  with its neighbors. Edges \
between nodes that have a Jaccard index lower than the cutoff will be \
removed. Default parameters are identical to those found in Seurat.\n\nThis \
function uses IGraphM, one of the external packages loaded with BigSur, for \
the final plotting step, where it calls, \
\[OpenCurlyDoubleQuote]IGWeightedAdjacencyGraph\[CloseCurlyDoubleQuote]\n\nTo \
use SNNGraph one first decides what features to use for clustering.  This may \
be done by taking the genes with the most significant modified corrected Fano \
factors, or taking genes that are part of particular gene communities.  \n\n\
The argument mat_ is then derived from the cell-specific residuals matrix \
returned by BigSur, so that the cells are being clustered by their modified, \
corrected Pearson residuals (one could also use a normalized gene expression \
matrix, but artifacts induced by normalization can impede proper clustering). \
 One takes that matrix and from it extracts only those rows that correspond \
to features one has chosen to use, and only those columns to correspond to \
cells one wishes to cluster.  ",
 StyleBox["One then transposes that matrix, so that the input to SNNGraph has \
cells as row labels and genes as column labels.  ",
  FontWeight->"Bold"],
 "\n\nThe parameter k refers to the number of nearest neighbors used in graph \
generation.  Default=20.\n\nThe parameter \[OpenCurlyDoubleQuote]cutoff\
\[CloseCurlyDoubleQuote] sets a jaccard similarity cutoff; default = \
0.0666667. If this is set to 0, no pruning will occur. If this is set to 1, \
every edge will be pruned.\n\nThe parameter npcs refers to the number of \
Principal components used.  Default = 50.\n\nThe output of SNNGraph2 is list \
with two elements.  The first element is the list of pcs, the second element \
is that weighted adjacency matrix."
}], "Text",
 CellChangeTimes->{{3.874439425684841*^9, 3.874439453913331*^9}, {
   3.874439639857974*^9, 3.874439647029187*^9}, {3.878505782371719*^9, 
   3.8785058083957777`*^9}, {3.90641944003793*^9, 3.906419551486095*^9}, {
   3.906419606241044*^9, 3.906419624525906*^9}, {3.906419664613824*^9, 
   3.906419982524456*^9}, {3.906420054215312*^9, 3.906420062753557*^9}, {
   3.9064200953991957`*^9, 3.9064201729449377`*^9}, {3.906420258243519*^9, 
   3.906420267002038*^9}, {3.906420941521761*^9, 3.906420993245677*^9}, {
   3.906917915483053*^9, 3.906917922758676*^9}, {3.906917959440565*^9, 
   3.906918036388685*^9}, {3.906918067252406*^9, 3.90691813985773*^9}, {
   3.906918271297433*^9, 3.906918399450942*^9}, {3.90691847952139*^9, 
   3.906918560757153*^9}, {3.906918593761982*^9, 3.906918606013411*^9}, {
   3.906918791789472*^9, 3.9069188373131657`*^9}, 3.906918872036512*^9, 
   3.907063503705943*^9},ExpressionUUID->"81bc3d91-513a-4527-99e2-\
c0308f1d24d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SNNGraph2", "[", 
   RowBox[{"mat_", ",", " ", 
    RowBox[{"k_", ":", "20"}], ",", " ", 
    RowBox[{"cutoff_", ":", 
     RowBox[{"N", "[", 
      RowBox[{"1", "/", "15"}], "]"}]}], ",", 
    RowBox[{"npcs_", ":", "50"}]}], "]"}], ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "allpcs", ",", " ", "pcs", ",", "nngraph", ",", " ", "nnmat", ",", 
      "snnmat", ",", "snngraph", ",", " ", "neighborlist", ",", " ", 
      "jaccardmat"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"First", " ", "calculate", " ", "PC", " ", "matrix"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"Dimensions", "[", "mat", "]"}], "]"}], "!=", "2"}], ",", 
       " ", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<matrix has wrong dimensions\>\"", "]"}], 
        ";", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"allpcs", " ", "=", " ", 
      RowBox[{"PrincipalComponents", "[", 
       RowBox[{
        RowBox[{"N", "[", "mat", "]"}], ",", " ", 
        RowBox[{"Method", "->", "\"\<Correlation\>\""}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pcs", " ", "=", " ", 
      RowBox[{"allpcs", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", 
         RowBox[{"1", ";;", "npcs"}]}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<Calculated PC matrix\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Now", " ", "calculate", " ", "k"}], "-", " ", 
       RowBox[{
       "Nearest", " ", "Neighbors", " ", "for", " ", "each", " ", "cell"}]}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"nngraph", "=", " ", 
      RowBox[{"NearestNeighborGraph", "[", 
       RowBox[{"pcs", ",", " ", "k"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nngraph", " ", "=", " ", 
      RowBox[{"SetProperty", "[", 
       RowBox[{"nngraph", ",", 
        RowBox[{"EdgeWeight", "->", 
         RowBox[{"EuclideanDistance", "@@@", 
          RowBox[{"EdgeList", "[", "nngraph", "]"}]}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nnmat", " ", "=", " ", 
      RowBox[{"WeightedAdjacencyMatrix", "[", "nngraph", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<KNN Finished\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calculate", " ", "Jaccard", " ", "similarity", " ", "for", " ", "each",
        " ", "cell", " ", "connected", " ", "by", " ", "an", " ", "edge"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"neighborlist", " ", "=", " ", 
      RowBox[{"nnmat", "[", "\"\<AdjacencyLists\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "neighborlist", " ", "gives", " ", "a", " ", "set", " ", "of", " ", 
        "lists", " ", "of", " ", "the", " ", "neighbors", " ", "of", " ", 
        "each", " ", "vertex"}], ",", " ", 
       RowBox[{"in", " ", "order", " ", "by", " ", "vertex"}]}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"jaccardmat", " ", "=", 
      RowBox[{"Outer", "[", 
       RowBox[{
       "JaccardSimilarity", ",", "neighborlist", ",", "neighborlist", ",", 
        "1"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<Jaccard scores calculated\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Get", " ", "positions", " ", "greater", " ", "than", " ", "cutoff"}], 
       ";", " ", 
       RowBox[{
       "BoolEval", " ", "makes", " ", "a", " ", "matrix", " ", "with", " ", 
        RowBox[{"1", "'"}], "s", " ", "at", " ", "positions", " ", "where", 
        " ", "jaccardmat", " ", "is", " ", "above", " ", "the", " ", "cutoff",
         " ", "and", " ", "zeros", " ", 
        RowBox[{"otherwise", "."}]}]}], "  ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"snnmat", " ", "=", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"BoolEval", "[", 
         RowBox[{"jaccardmat", ">", "cutoff"}], "]"}], "*", "nnmat"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<SNN Matrix created\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"snngraph", "=", 
      RowBox[{"IGWeightedAdjacencyGraph", "[", "snnmat", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pcs", ",", "snngraph"}], "}"}], ",", " ", "Module"}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
     "Print", "[", "\"\<Converted SNN Matrix into graph\>\"", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.8744394933087273`*^9, {3.874439655591793*^9, 3.874439663167007*^9}, {
   3.8744464893063602`*^9, 3.874446493175829*^9}, {3.874446595026226*^9, 
   3.8744465990714827`*^9}, {3.874600835092072*^9, 3.8746008431654778`*^9}, {
   3.87618700602607*^9, 3.876187008526*^9}, {3.877429533828918*^9, 
   3.8774295756735783`*^9}, {3.8791082214343777`*^9, 3.879108257679482*^9}, {
   3.879109452210388*^9, 3.87910974029349*^9}, {3.8791098068878593`*^9, 
   3.879109824319672*^9}, 3.8791098681049423`*^9, {3.879110066580353*^9, 
   3.8791100711772614`*^9}, {3.8791249717408*^9, 3.879125041006339*^9}, {
   3.8833981934640303`*^9, 3.883398199424799*^9}},
 Background->RGBColor[1, 1, 0],
 CellLabel->"In[2]:=",ExpressionUUID->"61ffe17f-4411-4c32-8eb2-03a96c85f852"]
}, Open  ]],

Cell[CellGroupData[{

Cell["CoordinateAssociation", "Subsubsection",
 CellChangeTimes->{
  3.9064203055666857`*^9},ExpressionUUID->"e1df927a-a406-4092-983d-\
092d0db35462"],

Cell["\<\
This code uses the output of SNNGraph2 to generate a set of cluster \
assignments, using Leiden clustering, and based on a value of resolution that \
the user selects.  \
\>", "Text",
 CellChangeTimes->{{3.906421171552616*^9, 3.906421195022731*^9}, {
  3.90642134579819*^9, 
  3.906421349797987*^9}},ExpressionUUID->"4d966ed9-8623-419a-a131-\
57345821dc5b"],

Cell["\<\
This takes as arguments a matpac (specifically, the matpac from which the \
cell-specific residuals matrix was generated that was used as input to \
SNNGraph2), the output of SNNGraph2 (which is a list of two elements), and a \
resolution value (a user-defined parameter that controls how many clusters \
are found).

The default method for Dimensional Reduction is \[OpenCurlyDoubleQuote]UMAP\
\[CloseCurlyDoubleQuote], but there is an option to change that to other \
methods available to DimensionReduce, such as TSNE.  

Note that this code calls \[OpenCurlyDoubleQuote]IGCommunitiesLeiden\
\[CloseCurlyDoubleQuote] which is part of the IGraphM package.

The output is an association of cell IDs to Cartesian coordinates, grouped by \
identified clusters.  \
\>", "Text",
 CellChangeTimes->{{3.906421047021884*^9, 3.906421164448443*^9}, {
  3.906421200781509*^9, 
  3.906421394476438*^9}},ExpressionUUID->"46d6524e-7a4d-43ef-8ef5-\
99d04583e8be"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "CoordinateAssociation", "]"}], " ", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<Method\>\"", "->", " ", "\"\<UMAP\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CoordinateAssociation", "[", 
   RowBox[{"matpac_", ",", " ", "snngraph_", ",", "resolution_", ",", " ", 
    RowBox[{"opt", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"reduction", ",", "message", ",", " ", "communities"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"communities", " ", "=", 
      RowBox[{
       RowBox[{"IGCommunitiesLeiden", "[", 
        RowBox[{
         RowBox[{"snngraph", "[", 
          RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
         RowBox[{"\"\<Resolution\>\"", "->", " ", "resolution"}]}], "]"}], 
       "[", "\"\<Communities\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"reduction", " ", "=", " ", 
      RowBox[{"DimensionReduce", "[", 
       RowBox[{
        RowBox[{"snngraph", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "2", ",", 
        RowBox[{"Method", "->", 
         RowBox[{"OptionValue", "[", "\"\<Method\>\"", "]"}]}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"matpac", "[", 
           RowBox[{"[", 
            RowBox[{"3", ",", 
             RowBox[{"communities", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}], ")"}], "->", 
         " ", 
         RowBox[{"reduction", "[", 
          RowBox[{"[", 
           RowBox[{"communities", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "communities", "]"}]}], "}"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.8776392837446423`*^9, 3.877639313649447*^9}, {
  3.877649251537355*^9, 3.877649261546039*^9}, {3.8776493579830503`*^9, 
  3.877649410049583*^9}, {3.87764945915888*^9, 3.877649556994125*^9}, {
  3.879129112331991*^9, 3.8791291154003*^9}},
 Background->RGBColor[1, 1, 0],
 CellLabel->"In[3]:=",ExpressionUUID->"a1ef10b6-a9ab-4297-b85a-4f6d694f7c42"]
}, Open  ]],

Cell[CellGroupData[{

Cell["PlotClustersFromCoords", "Subsubsection",
 CellChangeTimes->{{3.9064207626177597`*^9, 
  3.906420770091346*^9}},ExpressionUUID->"f09d6d70-7710-443d-8488-\
b64395feb399"],

Cell["\<\
This plots a UMAP plot from a coordinate association (see above)\
\>", "Text",
 CellChangeTimes->{{3.877442225898448*^9, 3.877442300658121*^9}, {
  3.8774425177422647`*^9, 3.877442541920114*^9}, {3.879433471882784*^9, 
  3.8794334798423767`*^9}, {3.9064207893860683`*^9, 3.9064208240677643`*^9}, {
  3.906421420652316*^9, 
  3.906421425565393*^9}},ExpressionUUID->"a7085009-a3d0-4e33-ae9f-\
12c2f09b3e7a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "PlotClustersFromCoords", "]"}], " ", "=", " ", 
   RowBox[{"Options", "[", "ListPlot", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlotClustersFromCoords", "[", 
   RowBox[{"coordinateassociation_", ",", " ", 
    RowBox[{"opt", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Values", "/@", "coordinateassociation"}], ",", " ", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "coordinateassociation", "]"}], "]"}]}], ",", 
    " ", 
    RowBox[{"PlotStyle", "->", " ", 
     RowBox[{"PointSize", "[", "Medium", "]"}]}], ",", 
    RowBox[{"Axes", "->", " ", "None"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8744395101312437`*^9, 3.874439519590057*^9}, {
   3.87444650391824*^9, 3.874446515169697*^9}, {3.874452675828541*^9, 
   3.874452750444406*^9}, {3.87445278637919*^9, 3.874452835098545*^9}, {
   3.874453563089616*^9, 3.874453622858686*^9}, {3.8746008999253187`*^9, 
   3.874600908211635*^9}, 3.877436951505323*^9, {3.877436982447012*^9, 
   3.877436997936061*^9}, {3.877437559444826*^9, 3.8774375703223743`*^9}, {
   3.877437620966811*^9, 3.877437717924156*^9}, {3.87743783904172*^9, 
   3.8774379124068947`*^9}, {3.877441987619598*^9, 3.8774419899434443`*^9}, {
   3.877442020923634*^9, 3.8774420214905148`*^9}, {3.8774420543125467`*^9, 
   3.877442126538602*^9}, {3.877442433631068*^9, 3.8774424340621443`*^9}, {
   3.877442498575573*^9, 3.877442513040125*^9}, {3.877442724195861*^9, 
   3.877442725288864*^9}, {3.879433486758418*^9, 3.879433590942704*^9}, {
   3.8794336369393873`*^9, 3.879433639513616*^9}, {3.879434131196869*^9, 
   3.879434140559052*^9}, {3.879434186367641*^9, 3.879434187282531*^9}, {
   3.879434325360155*^9, 3.879434394902741*^9}, {3.879434427134056*^9, 
   3.879434432442856*^9}, {3.879434498403782*^9, 3.879434499560404*^9}, {
   3.8794345381878357`*^9, 3.879434539500216*^9}, {3.879604788223105*^9, 
   3.879604793993132*^9}},
 Background->RGBColor[1, 1, 0],
 CellLabel->"In[5]:=",ExpressionUUID->"0cef4333-f0ee-4057-8e3c-cc1fc5fbe521"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{992, 849},
WindowMargins->{{193, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (June 3, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9e1d80e3-1d8f-4dcd-9d8d-a1562f79f3df"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 172, 3, 69, "Chapter",ExpressionUUID->"9794167f-21eb-475d-b132-4b57a02f97e2"],
Cell[CellGroupData[{
Cell[777, 29, 163, 3, 67, "Section",ExpressionUUID->"c430fcf9-2419-43d6-98a1-9b093af54ca1"],
Cell[CellGroupData[{
Cell[965, 36, 246, 4, 45, "Subsubsection",ExpressionUUID->"56148ecc-37b5-4f88-81c2-bc264f3c40a2"],
Cell[1214, 42, 1578, 27, 311, "Text",ExpressionUUID->"eee9da1c-6c70-47fb-be2f-b21649340eac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2829, 74, 172, 3, 45, "Subsubsection",ExpressionUUID->"6f0a5443-c389-4f07-b583-e42ddc9f1609"],
Cell[3004, 79, 2317, 39, 426, "Text",ExpressionUUID->"8f015e31-2461-4101-9476-6a2786fc23c5"],
Cell[5324, 120, 2662, 65, 236, "Input",ExpressionUUID->"c83f71a0-d6ab-401d-9be9-c44efc88e8a3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8035, 191, 157, 3, 67, "Section",ExpressionUUID->"bf78f765-73ef-4881-928e-ae6b729c539c"],
Cell[CellGroupData[{
Cell[8217, 198, 213, 4, 45, "Subsubsection",ExpressionUUID->"d39926ec-3f63-415b-ac5b-2c5376f35963"],
Cell[8433, 204, 361, 7, 58, "Text",ExpressionUUID->"9808ce1b-ac4d-468f-bfe3-df365855198e"],
Cell[CellGroupData[{
Cell[8819, 215, 1058, 27, 96, "Input",ExpressionUUID->"1b0d7b7d-87ea-48af-a6f0-01eedbbd9de4"],
Cell[9880, 244, 15571, 300, 61, "Output",ExpressionUUID->"e2a09cc1-7ff3-46fd-9cfc-89b4a9bf4e41"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25500, 550, 236, 4, 45, "Subsubsection",ExpressionUUID->"a836ff8b-c976-4b33-ae1d-9ddb0b98cf47"],
Cell[25739, 556, 3508, 53, 656, "Text",ExpressionUUID->"81bc3d91-513a-4527-99e2-c0308f1d24d4"],
Cell[29250, 611, 5817, 131, 719, "Input",ExpressionUUID->"61ffe17f-4411-4c32-8eb2-03a96c85f852"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35104, 747, 150, 3, 45, "Subsubsection",ExpressionUUID->"e1df927a-a406-4092-983d-092d0db35462"],
Cell[35257, 752, 367, 8, 58, "Text",ExpressionUUID->"4d966ed9-8623-419a-a131-57345821dc5b"],
Cell[35627, 762, 960, 20, 242, "Text",ExpressionUUID->"46d6524e-7a4d-43ef-8ef5-99d04583e8be"],
Cell[36590, 784, 2358, 59, 152, "Input",ExpressionUUID->"a1ef10b6-a9ab-4297-b85a-4f6d694f7c42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38985, 848, 175, 3, 45, "Subsubsection",ExpressionUUID->"f09d6d70-7710-443d-8488-b64395feb399"],
Cell[39163, 853, 415, 8, 35, "Text",ExpressionUUID->"a7085009-a3d0-4e33-ae9f-12c2f09b3e7a"],
Cell[39581, 863, 2199, 40, 110, "Input",ExpressionUUID->"0cef4333-f0ee-4057-8e3c-cc1fc5fbe521"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

